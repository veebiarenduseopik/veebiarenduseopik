{
  "chapter1-1": {
    "title": "1.1 Sissejuhatus",
    "content": "<h1>1.1 Sissejuhatus</h1> <img src='media/img/internet.png' width='' alt='alt_text' title='image_tooltip'> <i> Pilt: <a href='https://www.elisa.ee/ru/eraklient/internet/kodus/koduinternet'>Elisa</a> </i> <p> Tänapäevase maailma on raske ette kujutada ilma internetita, internet omakorda koosneb veebisaitidest. Tihti iga veebilehekülje aluseks on kolm tehnoloogiat: HTML, CSS ja JavaScript. </p> <p> Oskus töötada nende tehonoloogiatega on väga kasulik, näiteks, te saate luua oma veebisait või blogi, samuti programmeerimine aitab arenada loogilist mõtlemist. HTML, CSS ja JavaScripti õppimine on kasulik ja huvitav tegevus, mis aitab omandada uusi oskusi. </p> <em>Vastavalt iga-aastasele Stackoverflow uuringule, 2023. aasta seisuga olid JavaScript, HTML ja CSS kõige sagedamini kasutatavad 'programmeerimiskeeled' üle maailma. — <a href='https://survey.stackoverflow.co/2023#most-popular-technologies-language'>StackOverflow</a></em> <img src='media/img/top2023.png' width='' alt='alt_text' title='image_tooltip'><i> Pilt: <a href='https://survey.stackoverflow.co/2023/#most-popular-technologies-language'>StackOverflow</a> </i> <p> Täna kuuleme sagedamini, et ilmuvad uued AI või veebilehe ehitajad, mis võimaldavad luua oma veebisait üldse ilma teadmisteta, kuid nagu igal asjal on nendel omad puudused ja nõrkused. HTML, CSS ja JavaScripti oskus annab mitmeid eeliseid võrreldes nende platvormidega, kus saab veebilehe teha 'kahe klõpsuga': </p> <ul> <li>Veebilehe ehitajad tavaliselt piiravad palju võimalusi, kuid HTML, CSS ja JavaScripti abil saab teha kõike. <li>Veebilehed, mis on loodud “veebilehe ehitajate” abil põhinevad tehtud šabloonidel, mis ei kanna mingit originaalsust ja sageli tekib inimestel nende suhtes usaldamatus. <li>Niisugused teenused, kus saate tegelikult midagi head, nõuavad tasu. <li>Paljud inimesed, kes proovisid kasutada AI veebilehe loomiseks, märgivad, et genereeritud veebilehel on palju vigu ja puudusi. </li> </ul> <p> Seega, isegi meie ajastul, HTML, CSS ja JavaScripti teadmine jääb aktuaalseks ja väärtuslikuks oskuseks. </p>"
  },
  "chapter1-2": {
    "title": "1.2 Arenduskeskkonna seadistamine",
    "content": "<h1>1.2 Arenduskeskkonna seadistamine</h1> <p>Veebisaite saab luua isegi kasutades rakendust “märkmed arvutil, kuid arendamine sellises keskkonnas on üsna keeruline ja ebameeldiv. Seetõtt kasutavad arendajad koodi kirjutamiseks tavaliselt koodiredaktoreid.</p> <p>Koodiredaktorid pakkuvad palju funktsioone, mis lihtsustavad ja kiirendavad arendust. Need, näiteks, automaatselt värvivad koodi süntaksit, pakuvad automaatselt koodilõikude täiendamist, kontrollivad, et koodis ei oleks vigu jne.</p> <p>Meie kursuse raames kasutame Microsofti poolt tehtud koodiredaktorit Visual Studio Code. See pakub põhilisi funktsioone arendamise jaoks ja sellega on üldiselt lihtne peale hakkata.</p> <img src='media/img/vscode.png' alt='alt_text' title='image_tooltip'> <i> Pilt: <a href='https://code.visualstudio.com/opengraphimg/opengraph-home.png'>Visual Studio Code</a> </i> <p>Vaatleme paigaldusprotsessi samm-sammult:</p> <ul> <li>Visual Studio koodi paigaldamiseks kooli arvutitesse peate avama <a href='https://code.visualstudio.com/sha/download?build=stable&os=win32-x64-archive'>linki</a>. Arvutisse laadib alla arhiiv, mis sisaldab programmi kaasaskantavat versiooni, mis tähendab, et programm ei jäta oma prügi süsteemi ega vaja arvutisse täiendavat installimist, vaid töötab ainult oma kaustas. <li>Pärast arhiivi allalaadimist on vaja see lahti pakkida ja avada faili Code.exe. Käivitub koodiredaktori tervitusaken, milles jätame kõik tutvumispunktid vahele, klõpsates nuppule “Mark done”. <li>Vajutame Ctrl+Shift+X ja sisestame otsingusse “Live Server” ning laadime seda alla See plugin võimaldab käivitada saiti lokaalses võrgus ja näha muudatusi reaalajas otse brauseris. <li>Lõpuks loome projekti jaoks tööala. Selleks loome uus kaust ja lohistame redaktorisse. </li> </ul> <video loop='' muted='' autoplay='' playsinline='' disablepictureinpicture='' controls='false'> <source src='media/video/vscode.mp4' type='video/mp4'> </video>"
  },
  "chapter1-3": {
    "title": "1.3 Esimese HTML-faili loomine",
    "content": "<h1>1.3 Esimese HTML-faili loomine</h1> <p>Pärast tööala edukat loomist saame oma kaustas faile luua. Meie veebisaidi esimene fail on HTML-fail - tekstidokument, mis vastutab lehe sisu eest. Selleks tehke Visual Studio Code vasakpoolses küljeribas paremklõps ja valige “New File...”, selle nimeks peab olema index.html. Loodud fail avaneb kohe redaktoris ja sinna tuleb kirjutada märk “!” ja vajutada klahvi “TAB”, et programm kirjutaks meie eest HTML-faili struktuuri.</p> <p>Palju õnne, seda võib juba veebisaidiks nimetada! Seda saab käivitada ja vaadata, klõpsates programmi all paremas nurgas nuppu “Go Live”.</p> <img src='media/img/workspace.png' alt='alt_text' title='image_tooltip'>"
  }
}