{
    "chapter4-1": {
      "title": "4.1 Mis on JavaScript?",
      "content": "<h1>4.1 Mis on JavaScript</h1> <img src='media/img/js.jpg'> <i>Pilt: <a href='https://www.expedition.co/blog/advantages-of-javascript'>Expedition Company</a> </i> <p>JavaScript (JS) on programmeerimiskeel, mille abil saab saidile lisada interaktiivsust. Sellega saab animatsioone käivitada, erinevaid hüpikaknaid avada, teha arvutusi, kasutajate sisendi vastuvõtta ning käsitleda sündmusi, näiteks hiireklikid. See on kolmas tehnoloogia standardsetest veebitehnoloogiatest, peale HTML ja CSS, mida on vaja teada. Me käsitleme ainult väga põhilise ja väikese osa sellest. </p> <em>2023. aasta seisuga on JavaScript maailma populaarseim programmeerimiskeel ja peaaegu kõik veebisaidid on selles kirjutatud. - <a href='https://github.blog/2023-11-08-the-state-of-open-source-and-ai/'>GitHub, Inc.</a></em> <p> <img src='media/img/github-top-programming-languages-by-usage.webp'> <i>Pilt: <a href='https://github.blog/2023-11-08-the-state-of-open-source-and-ai/'>GitHub, Inc.</a> </i> <p> Nagu ka CSS stiilide faile, JavaScripti skriptid on vaja ka ühdendada HTML-failiga ning selleks avame faili index.html ja sisestame saidi põhiossa (&lt;body>&lt;/body>) lõppu all oleva rea, unustamata luua kaustas faili nimega script.js: </p> <code class='hljs language-html'>&lt;script src='script.js'>&lt;/script></code> <img src='media/img/jshtml.png'>"
    },
    "chapter4-2": {
      "title": "4.2 Peamine JS süntaks",
      "content": "<h1>4.2 JavaScripti alused</h1> <p> Selles teemas käsitleme JavaScripti põhilist süntaksit ja põhilisi keeleomadusi koos näidetega. JavaScriptis peab iga koodirida lõppema semikooloniga (;) !!! </p> <p> Enamasti koosneb JavaScript-kood sellistest elementidest nagu: </p> <ul> <li>Muutujad <p>Neid kasutatakse andmete salvestamiseks. Muutujasse saame salvestada kõike, mida tahame - kasutaja sisendit, teksti, numbrit jne. JavaScriptis muutuja loomiseks kasutatakse let või const märksõnu. Näide muutuja loomisest:</p> <code class='hljs language-javascript' style='margin-bottom: 1rem;'>let vanus = 25; //muutuja let väärtust saab edaspidi muuta</code> <code class='hljs language-javascript'>const auto = 'BMW'; //muutuja const väärtust ei saa muuta</code> <em>Kui arv on kirjutatud jutumärkides, näeb arvuti seda nagu tekst. Me kirjutame jutumärkidesse ainult teksti, mitte numbreid.</em> <p>Samuti saame salvestada meie väärtused massiivi – see on nagu kast, kuhu paneme kõik oma väärtused.</p> <code class='hljs language-javascript'>const autod = ['BMW','Honda', 'Mercedes'];</code> </li> <li>Operaatorid <p> Need on matemaatilised sümbolid, mille abil saab teha tehteid meie muutujatega. </p> <code class='hljs language-javascript'>const arv1 = 25;\nconst arv2 = 3;\nconst uus_arv = arv1 + arv2; //muutuja väärtuseks saab 28 </code> <p> Samuti saab ühendada kaks rida: </p> <code class='hljs language-javascript'>const nimi1 = 'Triinu';\nconst nimi2 = 'Liisi';\nconst uus_nimi = nimi1 + nimi2; //muutuja väärtuseks saab 'TriinuLiisi' </code> </li> <li>Funktsioonid: <p> Need võimaldavad salvestada koodiosa, mis täidab ühte ülesannet, ja seejärel täita seda vajaduse korral ühe lühikese käsuga, selle asemel, et sama koodi mitu korda kirjutada. </p> <code class='hljs language-javascript'>function väljasta():\n        console.log('123'); //console.log väljastab konsooli mingi teksti\nväljasta(); //siin me kutsume meie funktsiooni ja see prindib '123'. </code> </li> <li>Tingimused: <p> Näiteks kui meil on vaja midagi kontrollida, nt. kas antud avaldis on tõene, siis kasutame märksõna if. </p> <code class='hljs language-javascript'>let esimese_nimi = 'Bob';\nlet teise_nimi = 'Kati';\nif (esimese_nimi == teise_nimi) { // kui esimene inimese nimi on võrde teise inimese nimega\n        console.log('esimese inimese nimi on võrdne teise inimese nimega');\n} else { // kui esimene tingimus ei olnud tõene, töötab siis see\n        console.log('nimed ei ole samad');\n} </code> </li> <li>Sündmuste kuulajad <p> Need võimaldavad meil näiteks saada aru ja midagi teha, kui vajutati hiirenuppu või klaviatuuri klahvi. Nt: </p> <p> Nupp HTML-koodis: <code style='display: inline;'>&lt;button class='nupp'>klõpsa!&lt;/button></code></p> <code class='hljs language-javascript'>const nupp = document.querySelector('.nupp'); //valime  soovitud elemendi HTML-ist\nnupp.addEventListener(click,() =>{ // lisame nupule sündmuste kuulajat\n        console.log('klõpsati nuppu peale!'); // printime klõpsamisel konsooli mingi tekst\n}); </code> </li> </ul> <p>*Elementi &lt;input> sisestatud teksti saamiseks peame tegema järgmist:</p> <p>Teksti sisestamise rida HTML-koodis: <code class='hljs language-html' style='display:inline;'>&lt;input type='text' class='input'>&lt;/input></code></p> <code class='hljs language-javascript'>const sisend = document.querySelector('.input');\nconsole.log(sisend.innerHTML); </code><p>Rohkem infot JavaScripti kohta te saate leita sellel veebilehel: <a href='https://www.w3schools.com/js/default.asp' target='_blank'>W3Schools</a></p>"
    }
}